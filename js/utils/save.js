function save(e){NaNcheck(player),NaNalert&&!e||(localStorage.setItem(modInfo.id,btoa(unescape(encodeURIComponent(JSON.stringify(player))))),localStorage.setItem(modInfo.id+"_options",btoa(unescape(encodeURIComponent(JSON.stringify(options))))))}function startPlayerBase(){return{tab:layoutInfo.startTab,navTab:layoutInfo.showTree?layoutInfo.startNavTab:"none",time:Date.now(),notify:{},versionType:modInfo.id,version:VERSION.num,beta:VERSION.beta,timePlayed:0,keepGoing:!1,hasNaN:!1,points:modInfo.initialStartPoints,subtabs:{},lastSafeTab:readData(layoutInfo.showTree)?"none":layoutInfo.startTab}}function getStartPlayer(){const e=startPlayerBase();if(addedPlayerData){const a=addedPlayerData();Object.assign(e,a)}e.infoboxes={};for(const a in layers){if(e[a]=getStartLayerData(a),layers[a].tabFormat&&!Array.isArray(layers[a].tabFormat)&&(e.subtabs[a]={},e.subtabs[a].mainTabs=Object.keys(layers[a].tabFormat)[0]),layers[a].microtabs){e.subtabs[a]??={};for(const t in layers[a].microtabs)e.subtabs[a][t]=Object.keys(layers[a].microtabs[t])[0]}if(layers[a].infoboxes){e.infoboxes[a]??={};for(const t in layers[a].infoboxes)e.infoboxes[a][t]=!1}}return e}function getStartLayerData(e){const a=layers[e].startData?.()??{};return a.unlocked??=!0,a.total??=Decimal.dZero,a.best??=Decimal.dZero,a.resetTime??=0,a.forceTooltip??=!1,a.buyables=getStartBuyables(e),a.noRespecConfirm??=!1,a.clickables=getStartClickables(e),a.spentOnBuyables=Decimal.dZero,a.upgrades=[],a.milestones=[],a.lastMilestone=null,a.achievements=[],a.challenges=getStartChallenges(e),a.grid=getStartGrid(e),a.prevTab="",a}function getStartBuyables(e){const a={};if(!layers[e].buyables)return a;for(const t in layers[e].buyables)isPlainObject(layers[e].buyables[t])&&(a[t]=Decimal.dZero);return a}function getStartClickables(e){const a={};if(!layers[e].clickables)return a;for(const t in layers[e].clickables)isPlainObject(layers[e].clickables[t])&&(a[t]="");return a}function getStartChallenges(e){const a={};if(!layers[e].challenges)return a;for(id in layers[e].challenges)isPlainObject(layers[e].challenges[id])&&(a[id]=0);return a}function getStartGrid(e){const a={};if(!layers[e].grid)return a;layers[e].grid.maxRows??=layers[e].grid.rows,layers[e].grid.maxCols??=layers[e].grid.cols;for(let t=1;t<=layers[e].grid.maxRows;t++)for(let o=1;o<=layers[e].grid.maxCols;o++)a[100*t+o]=layers[e].grid.getStartData(100*t+o);return a}function fixSave(){fixData(getStartPlayer(),player);for(const e in layers)if(player[e].best??=Decimal.fromValue_noAlloc(player[e].best),player[e].total??=Decimal.fromValue_noAlloc(player[e].total),layers[e].tabFormat&&!Array.isArray(layers[e].tabFormat)&&(Object.keys(layers[e].tabFormat).includes(player.subtabs[e].mainTabs)||(player.subtabs[e].mainTabs=Object.keys(layers[e].tabFormat)[0])),layers[e].microtabs)for(const a in layers[e].microtabs)Object.keys(layers[e].microtabs[a]).includes(player.subtabs[e][a])||(player.subtabs[e][a]=Object.keys(layers[e].microtabs[a])[0])}function fixData(e,a){for(const t in e)null==e[t]?void 0===a[t]&&(a[t]=null):Array.isArray(e[t])?void 0===a[t]?a[t]=e[t]:fixData(e[t],a[t]):e[t]instanceof Decimal?void 0===a[t]?a[t]=e[t]:a[t]=new Decimal(a[t]):e[t]&&"object"==typeof e[t]?void 0===a[t]||"object"!=typeof e[t]?a[t]=e[t]:fixData(e[t],a[t]):void 0===a[t]&&(a[t]=e[t])}function load(){const e=localStorage.getItem(modInfo.id);let a=!1;if(e)try{player=Object.assign(getStartPlayer(),JSON.parse(decodeURIComponent(escape(atob(e))))),fixSave(),loadOptions()}catch(e){console.error(e),alert("Your save is invalid! You shall start with a new save."),a=!0}else e&&!a||(player=getStartPlayer());options.offlineProd&&(player.offTime??={remain:0},player.offTime.remain+=(Date.now()-player.time)/1e3),player.time=Date.now(),versionCheck(),changeTheme(),changeTreeQuality(),updateLayers(),setupModInfo(),setupTemp(),updateTemp(),updateTemp(),updateTabFormats(),loadVue()}function loadOptions(){const e=localStorage.getItem(modInfo.id+"_options");e&&Object.assign(options,JSON.parse(decodeURIComponent(escape(atob(e))))),themes.indexOf(options.theme)<0&&(theme="default"),fixData(options,getStartOptions())}function setupModInfo(){modInfo.changelog=changelog,modInfo.winText=winText}function fixNaNs(){NaNcheck(player)}function NaNcheck(e){for(item in e)if(null==e[item]);else if(Array.isArray(e[item]))NaNcheck(e[item]);else if(e[item]!=e[item]||checkDecimalNaN(e[item])){if(!NaNalert)return clearInterval(interval),NaNalert=!0,void alert("Invalid value found in player, named '"+item+"'. Please let the creator of this mod know! You can refresh the page, and you will be un-NaNed.")}else e[item]instanceof Decimal||e[item]&&e[item].constructor===Object&&NaNcheck(e[item])}function exportSave(){const e=btoa(JSON.stringify(player)),a=document.createElement("textarea");a.value=e,document.body.appendChild(a),a.select(),a.setSelectionRange(0,99999),document.execCommand("copy"),document.body.removeChild(a)}function importSave(e=prompt("Paste your save here"),a=!1){try{const t=Object.assign(getStartPlayer(),JSON.parse(atob(e)));if(t.versionType!==modInfo.id&&!a&&!confirm("This save appears to be for a different mod! Are you sure you want to import?"))return;player=t,player.versionType=modInfo.id,fixSave(),versionCheck(),NaNcheck(save),save(),window.location.reload()}catch(e){return}}function versionCheck(){VERSION.num>player.version&&(player.keepGoing=!1,fixOldSave(player.version),player.version=VERSION.num,player.beta=VERSION.beta)}let saveInterval=setInterval((()=>{void 0!==player&&(tmp.gameEnded&&!player.keepGoing||options.autosave&&save())}),5e3);
