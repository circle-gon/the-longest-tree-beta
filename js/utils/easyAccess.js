function hasUpgrade(e,t){return(player[e].upgrades.includes(toNumber(t))||player[e].upgrades.includes(t.toString()))&&!tmp[e].deactivated}function hasMilestone(e,t){return(player[e].milestones.includes(toNumber(t))||player[e].milestones.includes(t.toString()))&&!tmp[e].deactivated}function hasAchievement(e,t){return(player[e].achievements.includes(toNumber(t))||player[e].achievements.includes(t.toString()))&&!tmp[e].deactivated}function hasChallenge(e,t){return player[e].challenges[t]&&!tmp[e].deactivated}function maxedChallenge(e,t){return player[e].challenges[t]>=tmp[e].challenges[t].completionLimit&&!tmp[e].deactivated}function challengeCompletions(e,t){return player[e].challenges[t]}function getBuyableAmount(e,t){return player[e].buyables[t]}function setBuyableAmount(e,t,n){player[e].buyables[t]=n}function addBuyables(e,t,n){player[e].buyables[t]=player[e].buyables[t].add(n)}function getClickableState(e,t){return player[e].clickables[t]}function setClickableState(e,t,n){player[e].clickables[t]=n}function getGridData(e,t){return player[e].grid[t]}function setGridData(e,t,n){player[e].grid[t]=n}function upgradeEffect(e,t){return tmp[e].upgrades[t].effect}function challengeEffect(e,t){return tmp[e].challenges[t].rewardEffect}function buyableEffect(e,t){return tmp[e].buyables[t].effect}function clickableEffect(e,t){return tmp[e].clickables[t].effect}function achievementEffect(e,t){return tmp[e].achievements[t].effect}function gridEffect(e,t){return gridRun(e,"getEffect",player[e].grid[t],t)}
