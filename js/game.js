let player,needCanvasUpdate=!0;const TMT_VERSION={tmtNum:"2.6.6.2",tmtName:"Fixed Reality"};function getResetGain(e,t){const a=t??tmp[e].type;if(!t&&layers[e].getResetGain)return layers[e].getResetGain();if("none"===tmp[e].type)return new Decimal(0);if(tmp[e].gainExp.eq(0))return decimalZero;if("static"===a){if(!tmp[e].canBuyMax||tmp[e].baseAmount.lt(tmp[e].requires))return decimalOne;let t=tmp[e].baseAmount.div(tmp[e].requires).div(tmp[e].gainMult).max(1).log(tmp[e].base).times(tmp[e].gainExp).pow(Decimal.pow(tmp[e].exponent,-1));return t=t.times(tmp[e].directMult),t.floor().sub(player[e].points).add(1).max(1)}if("normal"===a){if(tmp[e].baseAmount.lt(tmp[e].requires))return decimalZero;let t=tmp[e].baseAmount.div(tmp[e].requires).pow(tmp[e].exponent).times(tmp[e].gainMult).pow(tmp[e].gainExp);return t.gte(tmp[e].softcap)&&(t=t.pow(tmp[e].softcapPower).times(tmp[e].softcap.pow(decimalOne.sub(tmp[e].softcapPower)))),t=t.times(tmp[e].directMult),t.floor().max(0)}return"custom"===a?layers[e].getResetGain():decimalZero}function getNextAt(e,t=!1,a=null){let r=a;if(!a&&(r=tmp[e].type,void 0!==layers[e].getNextAt))return layers[e].getNextAt(t);if("none"==tmp[e].type)return new Decimal(1/0);if(tmp[e].gainMult.lte(0))return new Decimal(1/0);if(tmp[e].gainExp.lte(0))return new Decimal(1/0);if("static"==r){tmp[e].canBuyMax||(t=!1);let a=player[e].points.plus(t&&tmp[e].baseAmount.gte(tmp[e].nextAt)?tmp[e].resetGain:0).div(tmp[e].directMult),r=Decimal.pow(tmp[e].base,a.pow(tmp[e].exponent).div(tmp[e].gainExp)).times(tmp[e].gainMult).times(tmp[e].requires).max(tmp[e].requires);return tmp[e].roundUpCost&&(r=r.ceil()),r}if("normal"==r){let t=tmp[e].resetGain.add(1).div(tmp[e].directMult);return t.gte(tmp[e].softcap)&&(t=t.div(tmp[e].softcap.pow(decimalOne.sub(tmp[e].softcapPower))).pow(decimalOne.div(tmp[e].softcapPower))),t=t.root(tmp[e].gainExp).div(tmp[e].gainMult).root(tmp[e].exponent).times(tmp[e].requires).max(tmp[e].requires),tmp[e].roundUpCost&&(t=t.ceil()),t}return"custom"==r?layers[e].getNextAt(t):decimalZero}function softcap(e,t,a=.5){return e.lte(t)?e:e.pow(a).times(t.pow(Decimal.dOne.sub(a)))}function shouldNotify(e){for(id in tmp[e].upgrades)if(isPlainObject(layers[e].upgrades[id])&&canAffordUpgrade(e,id)&&!hasUpgrade(e,id)&&tmp[e].upgrades[id].unlocked)return!0;if(player[e].activeChallenge&&canCompleteChallenge(e,player[e].activeChallenge))return!0;if(tmp[e].shouldNotify)return!0;if(isPlainObject(tmp[e].tabFormat))for(subtab in tmp[e].tabFormat)if(subtabShouldNotify(e,"mainTabs",subtab))return tmp[e].trueGlowColor=tmp[e].tabFormat[subtab].glowColor||defaultGlow,!0;for(family in tmp[e].microtabs)for(subtab in tmp[e].microtabs[family])if(subtabShouldNotify(e,family,subtab))return tmp[e].trueGlowColor=tmp[e].microtabs[family][subtab].glowColor,!0;return!1}function canReset(e){return void 0!==layers[e].canReset?run(layers[e].canReset,layers[e]):"normal"==tmp[e].type?tmp[e].baseAmount.gte(tmp[e].requires):"static"==tmp[e].type&&tmp[e].baseAmount.gte(tmp[e].nextAt)}function rowReset(e,t){for(lr in ROW_LAYERS[e])layers[lr].doReset?(isNaN(e)||Vue.set(player[lr],"activeChallenge",null),run(layers[lr].doReset,layers[lr],t)):tmp[t].row>tmp[lr].row&&!isNaN(e)&&layers[t].universe===layers[lr].universe&&layerDataReset(lr)}function layerDataReset(e,t=[]){let a={unlocked:player[e].unlocked,forceTooltip:player[e].forceTooltip,noRespecConfirm:player[e].noRespecConfirm,prevTab:player[e].prevTab};for(thing in t)void 0!==player[e][t[thing]]&&(a[t[thing]]=player[e][t[thing]]);for(thing in Vue.set(player[e],"buyables",getStartBuyables(e)),Vue.set(player[e],"clickables",getStartClickables(e)),Vue.set(player[e],"challenges",getStartChallenges(e)),Vue.set(player[e],"grid",getStartGrid(e)),layOver(player[e],getStartLayerData(e)),player[e].upgrades=[],player[e].milestones=[],player[e].achievements=[],a)player[e][thing]=a[thing]}function addPoints(e,t){player[e].points=player[e].points.add(t).max(0),player[e].best&&(player[e].best=player[e].best.max(player[e].points)),player[e].total&&(player[e].total=player[e].total.add(t))}function generatePoints(e,t){addPoints(e,tmp[e].resetGain.times(t))}function doReset(e,t=!1){if("none"==tmp[e].type)return;let a=tmp[e].row;if(!t){if(!1===tmp[e].canReset)return;if(tmp[e].baseAmount.lt(tmp[e].requires))return;let t=tmp[e].resetGain;if("static"==tmp[e].type){if(tmp[e].baseAmount.lt(tmp[e].nextAt))return;t=tmp[e].canBuyMax?t:1}if(layers[e].onPrestige&&run(layers[e].onPrestige,layers[e],t),addPoints(e,t),updateMilestones(e),updateAchievements(e),!player[e].unlocked&&(player[e].unlocked=!0,needCanvasUpdate=!0,tmp[e].increaseUnlockOrder))for(lr in lrs=tmp[e].increaseUnlockOrder,lrs)player[lrs[lr]].unlocked||player[lrs[lr]].unlockOrder++}if(!run(layers[e].resetsNothing,layers[e])){for(layerResetting in tmp[e].baseAmount=decimalZero,layers)a>=layers[layerResetting].row&&(!t||layerResetting!=e)&&completeChallenge(layerResetting);player.points=0==a?decimalZero:getStartPoints();for(let t=a;t>=0;t--)rowReset(t,e);for(r in OTHER_LAYERS)rowReset(r,e);player[e].resetTime=0,updateTemp(),updateTemp()}}function resetRow(e){if("I WANT TO RESET THIS"!=prompt('Are you sure you want to reset this row? It is highly recommended that you wait until the end of your current run before doing this! Type "I WANT TO RESET THIS" to confirm'))return;let t=ROW_LAYERS[e-1],a=ROW_LAYERS[e];rowReset(e+1,ROW_LAYERS[e+1][0]),doReset(t[0],!0);for(let e in a)player[e].unlocked=!1,player[e].unlockOrder&&(player[e].unlockOrder=0);player.points=getStartPoints(),updateTemp(),resizeCanvas()}function startChallenge(e,t){let a=!1;player[e].unlocked&&tmp[e].challenges[t].unlocked&&(player[e].activeChallenge==t?(completeChallenge(e,t),Vue.set(player[e],"activeChallenge",null)):a=!0,doReset(e,!0),a&&(Vue.set(player[e],"activeChallenge",t),run(layers[e].challenges[t].onEnter,layers[e].challenges[t])),updateChallengeTemp(e))}function canCompleteChallenge(e,t){if(t!=player[e].activeChallenge)return;let a=tmp[e].challenges[t];if(void 0!==a.canComplete)return a.canComplete;if(a.currencyInternalName){let e=a.currencyInternalName;if(a.currencyLocation)return!a.currencyLocation[e].lt(a.goal);if(a.currencyLayer){let t=a.currencyLayer;return!player[t][e].lt(a.goal)}return!player[e].lt(a.goal)}return!player.points.lt(a.goal)}function completeChallenge(e,t){if(!(t=player[e].activeChallenge))return;let a=canCompleteChallenge(e,t);if(!a)return Vue.set(player[e],"activeChallenge",null),void run(layers[e].challenges[t].onExit,layers[e].challenges[t]);player[e].challenges[t]<tmp[e].challenges[t].completionLimit&&(needCanvasUpdate=!0,player[e].challenges[t]+=a,player[e].challenges[t]=Math.min(player[e].challenges[t],tmp[e].challenges[t].completionLimit),layers[e].challenges[t].onComplete&&run(layers[e].challenges[t].onComplete,layers[e].challenges[t])),Vue.set(player[e],"activeChallenge",null),run(layers[e].challenges[t].onExit,layers[e].challenges[t]),updateChallengeTemp(e)}function autobuyUpgrades(e){if(tmp[e].upgrades)for(id in tmp[e].upgrades)!isPlainObject(tmp[e].upgrades[id])||void 0!==layers[e].upgrades[id].canAfford&&!0!==layers[e].upgrades[id].canAfford()||buyUpg(e,id)}function gameLoop(e){if((isEndgame()||tmp.gameEnded)&&(tmp.gameEnded=!0,clearParticles()),(isNaN(e)||e<0)&&(e=0),tmp.gameEnded&&!player.keepGoing&&(e=0,clearParticles()),maxTickLength){let t=maxTickLength();e>t&&(e=t)}addTime(e),player.points=player.points.add(tmp.pointGen.times(e)).max(0);for(let t=0;t<=maxRow;t++)for(item in TREE_LAYERS[t]){let a=TREE_LAYERS[t][item];player[a].resetTime+=e,tmp[a].passiveGeneration&&generatePoints(a,e*tmp[a].passiveGeneration),layers[a].update&&layers[a].update(e)}for(row in OTHER_LAYERS)for(item in OTHER_LAYERS[row]){let t=OTHER_LAYERS[row][item];player[t].resetTime+=e,tmp[t].passiveGeneration&&generatePoints(t,e*tmp[t].passiveGeneration),layers[t].update&&layers[t].update(e)}for(let e=maxRow;e>=0;e--)for(item in TREE_LAYERS[e]){let t=TREE_LAYERS[e][item];tmp[t].autoPrestige&&tmp[t].canReset&&doReset(t),layers[t].automate&&layers[t].automate(),tmp[t].autoUpgrade&&autobuyUpgrades(t)}for(row in OTHER_LAYERS)for(item in OTHER_LAYERS[row]){let e=OTHER_LAYERS[row][item];tmp[e].autoPrestige&&tmp[e].canReset&&doReset(e),layers[e].automate&&layers[e].automate(),player[e].best=player[e].best.max(player[e].points),tmp[e].autoUpgrade&&autobuyUpgrades(e)}for(layer in layers)layers[layer].milestones&&updateMilestones(layer),layers[layer].achievements&&updateAchievements(layer)}function hardReset(e){confirm("Are you sure you want to do this? You will lose all your progress!")&&(player=null,e&&(options=null),save(!0),window.location.reload())}VERSION.withoutName="v"+VERSION.num+(VERSION.pre?" Pre-Release "+VERSION.pre:VERSION.pre?" Beta "+VERSION.beta:""),VERSION.withName=VERSION.withoutName+(VERSION.name?": "+VERSION.name:"");let ticking=!1,interval=setInterval((()=>{if(!player||!tmp)return;if(ticking)return;if(tmp.gameEnded&&!player.keepGoing)return;ticking=!0;const e=Date.now();let t=(e-player.time)/1e3;const a=t;if(void 0!==player.offTime){if(player.offTime.remain>3600*modInfo.offlineLimit&&(player.offTime.remain=3600*modInfo.offlineLimit),player.offTime.remain>0){let e=Math.max(player.offTime.remain/10,t);player.offTime.remain-=e,t+=e}(!options.offlineProd||player.offTime.remain<=0)&&(player.offTime=void 0)}void 0!==player.devSpeed&&(t*=player.devSpeed),player.time=e,needCanvasUpdate&&(resizeCanvas(),needCanvasUpdate=!1),tmp.scrolled=document.getElementById("treeTab")&&document.getElementById("treeTab").scrollTop>30,updateTemp(),updateOomps(t),updateWidth(),updateTabFormats(),gameLoop(t),fixNaNs(),adjustPopupTime(a),updateParticles(a),ticking=!1}),50);setInterval((()=>needCanvasUpdate=!0),500);
