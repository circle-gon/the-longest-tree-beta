let canvas,ctx,colors_theme;function retrieveCanvasData(){const e=document.getElementById("treeCanvas");document.getElementById("treeTab");return!!e&&(canvas=e,ctx=canvas.getContext("2d"),!0)}function resizeCanvas(){retrieveCanvasData()&&(canvas.width=0,canvas.height=0,canvas.width=window.innerWidth,canvas.height=window.innerHeight,drawTree())}function drawTree(){if(retrieveCanvasData()){ctx.clearRect(0,0,canvas.width,canvas.height);for(const e in layers)if(tmp[e].layerShown||tmp[e].branches){for(const t in tmp[e].branches)drawTreeBranch(e,tmp[e].branches[t]);drawComponentBranches(e,tmp[e].upgrades,"upgrade-"),drawComponentBranches(e,tmp[e].buyables,"buyable-"),drawComponentBranches(e,tmp[e].clickables,"clickable-")}}}function drawComponentBranches(e,t,n){for(const a in t)if(t[a].branches)for(const r in t[a].branches)drawTreeBranch(a,t[a].branches[r],n+e+"-")}function drawTreeBranch(e,t,n){let a=t,r=1,c=15;if(Array.isArray(t)&&(a=t[0],r=t[1],c=t[2]||c),"number"==typeof r&&(r=colors_theme[r]),n&&(e=n+e,a=n+a),!document.getElementById(e)||!document.getElementById(a))return;const o=document.getElementById(e).getBoundingClientRect(),i=document.getElementById(a).getBoundingClientRect(),s=o.left+o.width/2+document.body.scrollLeft,d=o.top+o.height/2+document.body.scrollTop,h=i.left+i.width/2+document.body.scrollLeft,l=i.top+i.height/2+document.body.scrollTop;ctx.lineWidth=c,ctx.beginPath(),ctx.strokeStyle=r,ctx.moveTo(s,d),ctx.lineTo(h,l),ctx.stroke()}window.addEventListener("resize",resizeCanvas);
